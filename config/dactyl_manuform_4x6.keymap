#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define QWERTY 0
#define COLEMAK_DH 1
#define NAV 2
#define MOUSE 3
#define MEDIA 4
#define NUM 5
#define SYS 6
#define FUN 7


#define UNDO LC(Z)
#define REDO LC(Y)
#define COPY LC(C)
#define CUT LC(X)
#define PASTE LC(V)

#define P_ESC 0
#define P_Q 1
#define P_W 2
#define P_E 3
#define P_R 4 
#define P_T 5
#define P_Y 6
#define P_U 7
#define P_I 8 
#define P_O 9
#define P_P 10
#define P_BSPC 11
#define P_TAB 12
#define P_A 13
#define P_S 14
#define P_D 15
#define P_F 16
#define P_G 17
#define P_H 18
#define P_J 19
#define P_K 20
#define P_L 21
#define P_SEMI 22
#define P_SQT 23
#define P_CAPS 24
#define P_Z 25
#define P_X 26
#define P_C 27
#define P_V 28
#define P_B 29
#define P_N 30
#define P_M 31
#define P_COMMA 32
#define P_DOT 33
#define P_FSLH 34
#define P_BSLH 35
#define P_UP 36
#define P_DOWN 37
#define P_LEFT 38
#define P_RIGHT 39
#define P_NAV 40
#define P_MOUSE 41
#define P_SYS 42
#define P_NUM 43
#define P_LSHIFT 44
#define P_UNDO 45
#define P_REDO 46
#define P_RSHIFT 47
#define P_MEDIA 48
#define P_LGUI 49
#define P_RALT 50
#define P_FUN 51

#define COMBO_TIMEOUT 200
#define MACRO_TAP 10
#define MACRO_WAIT 0

&sk {
    release-after-ms = <2000>;
};


/ {

   macros {
    ZMK_MACRO(m_BSPCDOT,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp DOT &kp SPACE>;
    )
    ZMK_MACRO(m_BSPCCOMMA,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp COMMA &kp SPACE>;
    )
    ZMK_MACRO(m_BSPCing,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_BSPCBSPCing,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp BSPC &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_BSPCnSQTt,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp N &kp SQT &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_BSPCSQTre,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp SQT &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_BSPCs,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_BSPCSQTs,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp BSPC &kp SQT &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_danelipscombeATgmailDOTcom,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp A &kp N &kp E &kp L &kp I &kp P &kp S &kp C &kp O &kp M &kp B &kp E &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_DaneSPCLipscombe,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&sk LSHIFT &kp D &kp A &kp N &kp E &kp SPC &sk LSHIFT &kp L &kp I &kp P &kp S &kp C &kp O &kp M &kp B &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_Dane,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&sk LSHIFT &kp D &kp A &kp N &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_Lipscombe,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&sk LSHIFT &kp L &kp I &kp P &kp S &kp C &kp O &kp M &kp B &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_the,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_and,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_you,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Y &kp O &kp U &kp SPACE>;
    )
    ZMK_MACRO(m_that,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp A &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_was,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_for,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp O &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_are,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_with,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp I &kp T &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_his,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp I &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_they,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp E &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_one,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp N &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_have,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp A &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_this,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp I &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_from,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp R &kp O &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_had,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp A &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_hot,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp O &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_but,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp U &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_some,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp O &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_what,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp A &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_there,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp E &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_can,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp A &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_out,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp U &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_other,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp T &kp H &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_all,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_were,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp E &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_your,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Y &kp O &kp U &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_when,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_use,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp U &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_word,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp O &kp R &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_how,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_said,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp A &kp I &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_each,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp A &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_she,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp H &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_which,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp I &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_their,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp E &kp I &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_time,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp I &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_will,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp I &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_way,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_about,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp B &kp O &kp U &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_many,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp N &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_then,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_them,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp E &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_would,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp O &kp U &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_write,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp R &kp I &kp T &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_like,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp K &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_these,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp E &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_her,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_long,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp O &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_make,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp K &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_thing,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_see,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_him,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp I &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_two,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp W &kp O &kp SPACE>;
    )
    ZMK_MACRO(m_has,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp A &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_look,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp O &kp O &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_more,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp O &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_day,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp A &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_could,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp U &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_come,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_did,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp I &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_sound,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp O &kp U &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_most,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp O &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_number,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp U &kp M &kp B &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_who,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp O &kp SPACE>;
    )
    ZMK_MACRO(m_over,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp V &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_know,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp K &kp N &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_water,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp T &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_than,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp A &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_call,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp A &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_first,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp R &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_people,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp E &kp O &kp P &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_may,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_down,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp O &kp W &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_side,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp I &kp D &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_been,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_now,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_find,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_any,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp N &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_new,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp E &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_work,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp O &kp R &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_part,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp A &kp R &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_take,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp A &kp K &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_get,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp E &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_place,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp L &kp A &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_made,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp D &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_live,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_where,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp E &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_after,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp F &kp T &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_back,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp A &kp C &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_little,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp T &kp T &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_only,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp N &kp L &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_round,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp O &kp U &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_man,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_year,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Y &kp E &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_came,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp A &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_show,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp H &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_every,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp V &kp E &kp R &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_good,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp O &kp O &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_give,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp I &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_our,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp U &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_under,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp U &kp N &kp D &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_name,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp A &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_very,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp V &kp E &kp R &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_through,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp R &kp O &kp U &kp G &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_just,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp J &kp U &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_form,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp O &kp R &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_much,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp U &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_great,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp R &kp E &kp A &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_think,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp I &kp N &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_say,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp A &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_help,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp E &kp L &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_low,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_line,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp N &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_before,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp F &kp O &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_turn,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp U &kp R &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_cause,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp A &kp U &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_same,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp A &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_mean,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp E &kp A &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_differ,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp I &kp F &kp F &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_move,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp O &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_right,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp I &kp G &kp H &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_boy,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp O &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_old,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_too,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp O &kp O &kp SPACE>;
    )
    ZMK_MACRO(m_does,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp O &kp E &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_tell,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp E &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_sentence,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp N &kp T &kp E &kp N &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_set,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_three,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp R &kp E &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_want,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp N &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_air,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp I &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_well,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp E &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_also,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp L &kp S &kp O &kp SPACE>;
    )
    ZMK_MACRO(m_play,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp L &kp A &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_small,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp M &kp A &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_end,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_put,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp U &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_home,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp O &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_read,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp A &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_hand,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp A &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_port,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp O &kp R &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_large,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp A &kp R &kp G &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_spell,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp P &kp E &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_add,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp D &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_even,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp V &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_land,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp A &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_here,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp E &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_must,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp U &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_big,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp I &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_high,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp I &kp G &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_such,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp U &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_follow,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp O &kp L &kp L &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_act,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp C &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_why,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_ask,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp S &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_men,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_change,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp H &kp A &kp N &kp G &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_went,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp E &kp N &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_light,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp G &kp H &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_kind,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp K &kp I &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_off,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp F &kp F &kp SPACE>;
    )
    ZMK_MACRO(m_need,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp E &kp E &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_house,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp O &kp U &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_picture,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp I &kp C &kp T &kp U &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_try,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp R &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_again,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp G &kp A &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_animal,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp N &kp I &kp M &kp A &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_point,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp O &kp I &kp N &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_mother,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp O &kp T &kp H &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_world,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp O &kp R &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_near,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp E &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_build,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp U &kp I &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_self,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp L &kp F &kp SPACE>;
    )
    ZMK_MACRO(m_earth,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp A &kp R &kp T &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_father,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp T &kp H &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_head,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp E &kp A &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_stand,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp A &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_own,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp W &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_page,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp A &kp G &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_should,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp H &kp O &kp U &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_country,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp U &kp N &kp T &kp R &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_found,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp O &kp U &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_answer,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp N &kp S &kp W &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_school,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp C &kp H &kp O &kp O &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_grow,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp R &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_study,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp U &kp D &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_still,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp I &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_learn,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp E &kp A &kp R &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_plant,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp L &kp A &kp N &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_cover,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp V &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_food,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp O &kp O &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_sun,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp U &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_four,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp O &kp U &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_thought,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp O &kp U &kp G &kp H &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_let,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp E &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_keep,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp K &kp E &kp E &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_eye,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp Y &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_never,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp E &kp V &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_last,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp A &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_door,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp O &kp O &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_between,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp T &kp W &kp E &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_city,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp I &kp T &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_tree,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp R &kp E &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_cross,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp R &kp O &kp S &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_since,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp I &kp N &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_hard,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp A &kp R &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_start,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp A &kp R &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_might,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp I &kp G &kp H &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_story,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp O &kp R &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_saw,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp A &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_far,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_sea,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp A &kp SPACE>;
    )
    ZMK_MACRO(m_draw,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp R &kp A &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_left,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp E &kp F &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_late,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp A &kp T &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_run,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp U &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_donSQTt,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp O &kp N &kp SQT &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_while,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp I &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_press,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp R &kp E &kp S &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_close,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp L &kp O &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_night,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp I &kp G &kp H &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_real,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp A &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_life,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp F &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_few,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp E &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_stop,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp O &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_open,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp P &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_seem,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp E &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_together,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp O &kp G &kp E &kp T &kp H &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_next,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp E &kp X &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_white,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp I &kp T &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_children,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp H &kp I &kp L &kp D &kp R &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_begin,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp G &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_got,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp O &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_walk,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp L &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_example,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp X &kp A &kp M &kp P &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_ease,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp A &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_paper,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp A &kp P &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_often,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp F &kp T &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_always,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp L &kp W &kp A &kp Y &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_music,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp U &kp S &kp I &kp C &kp SPACE>;
    )
    ZMK_MACRO(m_those,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp O &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_both,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp O &kp T &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_mark,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp R &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_book,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp O &kp O &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_letter,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp E &kp T &kp T &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_until,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp U &kp N &kp T &kp I &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_mile,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp I &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_river,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp I &kp V &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_car,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_feet,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp E &kp E &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_care,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp A &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_second,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp C &kp O &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_group,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp R &kp O &kp U &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_carry,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp A &kp R &kp R &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_took,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp O &kp O &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_rain,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp A &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_eat,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp A &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_room,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp O &kp O &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_friend,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp R &kp I &kp E &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_began,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp G &kp A &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_idea,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp I &kp D &kp E &kp A &kp SPACE>;
    )
    ZMK_MACRO(m_fish,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp S &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_mountain,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp O &kp U &kp N &kp T &kp A &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_north,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp O &kp R &kp T &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_once,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp N &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_base,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp A &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_hear,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp E &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_horse,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp O &kp R &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_cut,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp U &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_sure,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp U &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_watch,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp T &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_color,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp L &kp O &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_face,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_wood,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp O &kp O &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_main,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_enough,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp N &kp O &kp U &kp G &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_plain,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp L &kp A &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_girl,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp I &kp R &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_usual,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp U &kp S &kp U &kp A &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_young,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Y &kp O &kp U &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_ready,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp A &kp D &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_above,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp B &kp O &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_ever,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp V &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_red,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_list,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_though,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp O &kp U &kp G &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_feel,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp E &kp E &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_talk,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp A &kp L &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_bird,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp I &kp R &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_soon,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp O &kp O &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_body,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp O &kp D &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_dog,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp O &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_family,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp M &kp I &kp L &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_direct,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp I &kp R &kp E &kp C &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_pose,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp O &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_leave,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp E &kp A &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_song,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp O &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_measure,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp E &kp A &kp S &kp U &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_state,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp A &kp T &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_product,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp R &kp O &kp D &kp U &kp C &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_black,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp L &kp A &kp C &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_short,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp H &kp O &kp R &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_numeral,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp U &kp M &kp E &kp R &kp A &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_class,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp L &kp A &kp S &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_wind,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp I &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_question,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Q &kp U &kp E &kp S &kp T &kp I &kp O &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_happen,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp A &kp P &kp P &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_complete,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp M &kp P &kp L &kp E &kp T &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_ship,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp H &kp I &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_area,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp R &kp E &kp A &kp SPACE>;
    )
    ZMK_MACRO(m_half,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp A &kp L &kp F &kp SPACE>;
    )
    ZMK_MACRO(m_rock,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp O &kp C &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_order,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp R &kp D &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_fire,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_south,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp O &kp U &kp T &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_problem,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp R &kp O &kp B &kp L &kp E &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_piece,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp I &kp E &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_told,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp O &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_knew,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp K &kp N &kp E &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_pass,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp A &kp S &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_farm,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp R &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_top,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp O &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_whole,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp H &kp O &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_king,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp K &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_size,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp I &kp Z &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_heard,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp E &kp A &kp R &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_best,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_hour,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp O &kp U &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_better,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp T &kp T &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_true,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp R &kp U &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_during,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp U &kp R &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_hundred,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp U &kp N &kp D &kp R &kp E &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_remember,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp M &kp E &kp M &kp B &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_step,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp E &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_early,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp E &kp A &kp R &kp L &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_hold,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp O &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_west,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp E &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_ground,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp R &kp O &kp U &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_interest,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp I &kp N &kp T &kp E &kp R &kp E &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_reach,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp A &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_fast,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_five,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_sing,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_listen,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp I &kp S &kp T &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_six,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp I &kp X &kp SPACE>;
    )
    ZMK_MACRO(m_table,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp A &kp B &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_travel,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp R &kp A &kp V &kp E &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_less,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp E &kp S &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_morning,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp O &kp R &kp N &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_ten,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_simple,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp I &kp M &kp P &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_several,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp V &kp E &kp R &kp A &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_vowel,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp V &kp O &kp W &kp E &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_toward,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp O &kp W &kp A &kp R &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_war,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_lay,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp A &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_against,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp G &kp A &kp I &kp N &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_pattern,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp A &kp T &kp T &kp E &kp R &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_slow,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp L &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_center,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp E &kp N &kp T &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_love,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp O &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_person,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp E &kp R &kp S &kp O &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_money,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp O &kp N &kp E &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_serve,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp E &kp R &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_appear,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp P &kp P &kp E &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_road,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp O &kp A &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_map,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_science,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp C &kp I &kp E &kp N &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_rule,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp U &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_govern,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp O &kp V &kp E &kp R &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_pull,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp U &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_cold,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_notice,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp O &kp T &kp I &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_voice,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp V &kp O &kp I &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_fall,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_power,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp O &kp W &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_town,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp O &kp W &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_fine,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp N &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_certain,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp E &kp R &kp T &kp A &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_fly,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp L &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_unit,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp U &kp N &kp I &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_lead,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp E &kp A &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_cry,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp R &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_dark,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp A &kp R &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_machine,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp A &kp C &kp H &kp I &kp N &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_note,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp O &kp T &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_wait,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp I &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_plan,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp L &kp A &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_figure,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp G &kp U &kp R &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_star,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_box,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp O &kp X &kp SPACE>;
    )
    ZMK_MACRO(m_noun,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp O &kp U &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_field,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp E &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_rest,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp S &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_correct,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp R &kp R &kp E &kp C &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_able,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp B &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_pound,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp O &kp U &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_done,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp O &kp N &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_beauty,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp A &kp U &kp T &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_drive,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp R &kp I &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_stood,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp O &kp O &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_contain,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp N &kp T &kp A &kp I &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_front,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp R &kp O &kp N &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_teach,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp E &kp A &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_week,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp E &kp E &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_final,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp I &kp N &kp A &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_gave,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp A &kp V &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_green,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp R &kp E &kp E &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_quick,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Q &kp U &kp I &kp C &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_develop,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp E &kp V &kp E &kp L &kp O &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_sleep,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp L &kp E &kp E &kp P &kp SPACE>;
    )
    ZMK_MACRO(m_warm,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp A &kp R &kp M &kp SPACE>;
    )
    ZMK_MACRO(m_free,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp R &kp E &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_minute,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp I &kp N &kp U &kp T &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_strong,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp R &kp O &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_special,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp P &kp E &kp C &kp I &kp A &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_mind,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp M &kp I &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_behind,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp H &kp I &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_clear,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp L &kp E &kp A &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_tail,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp A &kp I &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_produce,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp R &kp O &kp D &kp U &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_fact,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp A &kp C &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_inch,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp I &kp N &kp C &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_nothing,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp N &kp O &kp T &kp H &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_course,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp U &kp R &kp S &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_stay,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp T &kp A &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_full,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp F &kp U &kp L &kp L &kp SPACE>;
    )
    ZMK_MACRO(m_blue,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp L &kp U &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_object,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp O &kp B &kp J &kp E &kp C &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_decide,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp D &kp E &kp C &kp I &kp D &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_surface,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp U &kp R &kp F &kp A &kp C &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_island,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp I &kp S &kp L &kp A &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_yet,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Y &kp E &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_busy,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp U &kp S &kp Y &kp SPACE>;
    )
    ZMK_MACRO(m_record,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp E &kp C &kp O &kp R &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_boat,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp O &kp A &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_common,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp O &kp M &kp M &kp O &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_gold,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp O &kp L &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_possible,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp O &kp S &kp S &kp I &kp B &kp L &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_plane,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp L &kp A &kp N &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_age,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp G &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_wonder,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp O &kp N &kp D &kp E &kp R &kp SPACE>;
    )
    ZMK_MACRO(m_laugh,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp A &kp U &kp G &kp H &kp SPACE>;
    )
    ZMK_MACRO(m_thousand,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp T &kp H &kp O &kp U &kp S &kp A &kp N &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_ago,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp G &kp O &kp SPACE>;
    )
    ZMK_MACRO(m_ran,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp R &kp A &kp N &kp SPACE>;
    )
    ZMK_MACRO(m_check,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp C &kp H &kp E &kp C &kp K &kp SPACE>;
    )
    ZMK_MACRO(m_game,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp G &kp A &kp M &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_shape,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp H &kp A &kp P &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_yes,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp Y &kp E &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_brought,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp R &kp O &kp U &kp G &kp H &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_heat,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp H &kp E &kp A &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_snow,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp S &kp N &kp O &kp W &kp SPACE>;
    )
    ZMK_MACRO(m_bed,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp E &kp D &kp SPACE>;
    )
    ZMK_MACRO(m_bring,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp B &kp R &kp I &kp N &kp G &kp SPACE>;
    )
    ZMK_MACRO(m_perhaps,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp P &kp E &kp R &kp H &kp A &kp P &kp S &kp SPACE>;
    )
    ZMK_MACRO(m_weight,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp W &kp E &kp I &kp G &kp H &kp T &kp SPACE>;
    )
    ZMK_MACRO(m_language,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp L &kp A &kp N &kp G &kp U &kp A &kp G &kp E &kp SPACE>;
    )
    ZMK_MACRO(m_among,
        wait-ms = <MACRO_WAIT>;
        tap-ms = <MACRO_TAP>;
        bindings = <&kp A &kp M &kp O &kp N &kp G &kp SPACE>;
    )

    // MACROS END
  };

     

    behaviors {
    
    hmsf: homerow_mods_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lh_hmsf: left_hand_homerow_mods_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS_SHIFT";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <120>;                       
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;    
        };

        rh_hmsf: left_hand_homerow_mods_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS_SHIFT";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <120>;                       
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;   
        };

        hmctrl: homerow_mods_control {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_CONTROL";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hmgui: homerow_mods_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_GUI";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

    };

    combos {
        compatible = "zmk,combos";

        combo_the {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_D>;
            bindings = <&m_the>;
        };

        combo_with {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_S>;
            bindings = <&m_with>;
        };

        combo_that {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_F>;
            bindings = <&m_that>;
        };

        combo_people {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_G>;
            bindings = <&m_people>;
        };

        combo_and {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_W>;
            bindings = <&m_and>;
        };

        combo_have {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_R>;
            bindings = <&m_have>;
        };

        combo_which {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_E>;
            bindings = <&m_which>;
        };

        combo_about {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <P_NUM P_T>;
            bindings = <&m_about>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            label = "QWERTY";
            bindings = <
                &kp GRAVE   &kp Q  &kp W  &kp E  &kp R  &kp T               &kp Y  &kp U  &kp I     &kp O   &kp P    &kp BSPC
                &kp TAB &hmgui LGUI A  &hmgui LALT S  &hmctrl LCTRL D  &lh_hmsf LSHIFT F  &kp G               &kp H  &hmsf RSHIFT J  &hmctrl RCTRL K     &hmgui LALT L   &hmgui RGUI SEMI &kp SQT
                &caps_word &kp Z  &kp X  &kp C  &kp V  &kp B               &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                 &kp UP &kp DOWN                                      &kp LEFT &kp RIGHT
                                            &lt NAV SPACE  &lt MOUSE TAB           &lt SYS BSPC  &lt NUM ENTER
                                            &sk LSHIFT   &sk LSHIFT             &kp REDO  &sk RSHIFT
                                            &lt MEDIA ESC &kp LGUI            &kp RALT &lt FUN DEL
            >;
        };

        colemak-dh {
            label = "COLEMAK-DH";
            bindings = <
                &kp GRAVE   &kp Q  &kp W  &kp F  &kp P  &kp B               &kp J  &kp L  &kp U     &kp Y   &kp SEMI    &kp BSPC
                &kp TAB &hmgui LGUI A  &hmgui LALT R  &hmctrl LCTRL S  &lh_hmsf LSHIFT T  &kp G               &kp M  &rh_hmsf RSHIFT N  &hmctrl RCTRL E     &hmgui LALT I   &hmgui RGUI O &kp SQT
                &caps_word &kp Z  &kp X  &kp C  &kp D  &kp V               &kp K  &kp H  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                 &kp UP &kp DOWN                                      &kp LEFT &kp RIGHT
                                            &lt NAV SPACE  &lt MOUSE TAB           &lt SYS BSPC  &lt NUM ENTER
                                            &sk LSHIFT   &key_repeat             &kp REDO  &sk RSHIFT
                                            &lt MEDIA ESC &kp LGUI            &kp RALT &lt FUN DEL
            >;
        };


        nav {
            label = "NAV";
            bindings = <
                &reset  &trans &trans &kp LC(W) &kp LC(R) &trans                &kp REDO &kp CUT &kp COPY &kp PASTE &kp UNDO &trans
                &trans  &kp LC(A) &kp LC(LS(F)) &kp LC(S) &kp LC(F) &kp BSPC      &kp CAPS &kp LEFT &kp UP &kp DOWN &kp RIGHT &trans
                &trans  &kp UNDO &kp CUT &kp COPY &kp PASTE &kp ENTER      &kp INSERT &kp HOME &kp PAGE_UP &kp PAGE_DOWN &kp END &trans
                               &trans &trans                                            &trans &trans
                                             &trans  &trans               &kp BSPC &kp ENTER
                                             &trans  &trans               &trans &kp DEL
                                             &trans  &trans               &trans &trans
            >;
        };

        mouse {
            label = "MOUSE";
            bindings = <
                &trans  &trans &trans &trans &trans &trans                &kp REDO &kp CUT &kp COPY &kp PASTE &kp UNDO &trans
                &trans  &kp LGUI &kp LC(LS(D)) &kp LC(B) &kp LC(D) &kp BSPC      &kp CAPS &kp LEFT &kp UP &kp DOWN &kp RIGHT &trans
                &trans  &kp LG(LA(UP)) &kp LG(LA(LEFT)) &kp LG(LA(RIGHT)) &kp LG(LA(DOWN)) &kp LG(ENTER)      &kp INSERT &kp HOME &kp PAGE_UP &kp PAGE_DOWN &kp END &trans
                               &trans &trans                                            &trans &trans
                                             &trans  &trans               &kp BSPC &kp ENTER
                                             &trans  &trans               &trans &kp DEL
                                             &trans  &trans               &trans &trans
            >;
        };


        media {
            label = "MEDIA";
            bindings = <
                &trans  &trans &ext_power EP_OFF &ext_power EP_TOG &ext_power EP_ON &trans                &trans  &trans &trans &trans &trans &trans
                &trans  &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &trans      &trans  &kp K_PREV &kp K_VOL_DN &kp K_VOL_UP &kp K_NEXT &trans
                &trans  &trans &trans &trans &trans &trans                &trans  &trans &trans &trans &trans &trans
                               &trans &trans                                            &trans &trans
                                             &trans &trans                &kp K_STOP2 &kp K_PP
                                             &trans &trans                &trans &kp K_MUTE
                                             &trans &trans                &trans &trans
            >;
        };

        num {
            label = "NUM";
            bindings = <
                &trans  &kp LBKT &kp N7 &kp N8 &kp N9 &kp RBKT             &trans  &bt BT_PRV &bt BT_CLR &bt BT_NXT &trans &reset
                &kp CAPS  &kp SEMI &kp N4 &kp N5 &kp N6 &kp EQUAL          &trans  &kp RSHFT &kp RCTRL &kp LALT &kp RGUI &trans
                &trans  &kp GRAVE &kp N1 &kp N2 &kp N3 &kp MINUS           &trans  &trans &trans &trans &trans &trans
                               &trans &trans                                            &trans &trans
                                             &kp DOT &kp N0                &trans &trans
                                             &kp BSLH  &trans              &trans &trans
                                             &trans  &trans                &trans &trans
            >;
        };

        sys {
            label = "SYS";
            bindings = <
                &trans  &kp LBRC &kp AMPERSAND &kp ASTERISK &kp LPAR &kp RBRC             &trans  &out OUT_USB &out OUT_TOG &out OUT_BLE &trans &bootloader
                &kp CAPS  &kp COLON &kp DOLLAR &kp PERCENT &kp CARET &kp PLUS          &trans  &kp RSHFT &kp RCTRL &kp LALT &kp RGUI &trans
                &trans  &kp TILDE &kp EXCL &kp AT &kp HASH &kp UNDER           &trans  &trans &to QWERTY &to COLEMAK_DH &trans &trans
                               &trans &trans                                            &to QWERTY &to COLEMAK_DH
                                             &kp LPAR &kp RPAR               &trans &trans
                                             &kp PIPE  &trans              &trans &trans
                                             &trans  &trans                &trans &trans
            >;
        };

        fun {
            label = "FUN";
            bindings = <
                &trans  &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN              &trans  &ext_power EP_ON &ext_power EP_TOG &ext_power EP_OFF &trans &trans
                &trans  &kp F11 &kp F4 &kp F5 &kp F6 &kp SLCK               &trans  &kp RSHFT &kp RCTRL &kp LALT &kp RGUI &trans
                &trans  &kp F10 &kp F1 &kp F2 &kp F3 &kp PAUSE_BREAK        &trans  &trans &trans &trans &trans &trans
                               &trans &trans                                            &trans &trans
                                             &kp SPACE &kp TAB              &trans &trans
                                             &kp K_APP  &trans              &trans &trans
                                             &trans  &trans                 &trans &trans
            >;
        };

    };
};